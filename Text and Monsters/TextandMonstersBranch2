// TextAndMonstersBranch.cpp : Defines the entry point for the console application.
//Nichol He

#include "stdafx.h"
#include <iostream>
#include <string>
#include <time.h>
#include <iomanip>

using namespace std;

int main() {

	string gameStart, name, MenuSelect, action, cont;
	char Pclass;
	int Hp, Mp, HpMax, MpMax, Lvl;
	int Atk, Def, Luck;

	string Mname;
	int Mlvl, MHp, MHpMax, MMp, MMpMax;
	int MAtk, MDef;

	int exp, expDrop, expCap, expDif;

	Lvl = 1;
	expCap = 10;
	exp = 0;

	int rng;

	cout << "Welcome to Text and Monsters! Would you like to play?" << endl;
	cout << "\t Yes or No" << endl;
	cin >> gameStart;
	cout << endl;

	if (gameStart == "yes" || gameStart == "Yes") {
		cout << "Please enter your name" << endl;
		cout << endl;
		cin >> name;
		cout << endl << endl;
		cout << "Please Select a class" << endl;
		cout << "\t Blade Master || Paladin || Arch Mage || Spirit Mage" << endl;
			cin >> Pclass;
		cout << endl << endl;
		cout << "Welcome, " << name << endl;
		cout << endl << endl;
		Pclass = toupper (Pclass);

		if ( Pclass == 'B') {
				Hp = 10;
				Mp = 5;
				HpMax = 10;
				MpMax = 5;
				Atk = 5;
				Def = 3;
				Luck = 10;
		} 

		else if ( Pclass == 'P') {
				Hp = 12;
				Mp = 8;
				HpMax = 12;
				MpMax = 8;
				Atk = 3;
				Def = 5;
				Luck = 10;
		}

		else if ( Pclass == 'A') {
				Hp = 8;
				Mp = 8;
				HpMax = 8;
				MpMax = 8;
				Atk = 5;
				Def = 3;
				Luck = 10;
		}

		else if ( Pclass == 'S') {
				Hp = 10;
				Mp = 10;
				HpMax = 10;
				MpMax = 10;
				Atk = 4;
				Def = 4;
				Luck = 10;
		}

		else {
			cout << "Invalid Entry" << endl;
			cin.ignore (Pclass, '\n');
			return 0;
		}

		while (Lvl < 100) {
			cout << "  " << name << endl;
			cout << "  Lvl " << Lvl << " (" << exp << "/" << expCap << ")" << endl;
			cout << "  HP = (" << Hp << "/" << HpMax << ")" << endl;
			cout << "  MP = (" << Mp << "/" << MpMax << ")" << endl;
			cout << endl << endl << endl << endl;
			cout << "=======================================" << endl;
			cout << endl << endl;

			cout << "Battle" << endl;
			cout << "Rest" << endl;
			cout << endl;
			cin >> MenuSelect;
			cout << endl << endl << endl;

			if (MenuSelect == "Battle" || MenuSelect == "battle") {

				srand(time(NULL));
				rng = rand() % 100;

				cout << "===============================================" << endl;
				cout << endl;
				cout << "You have encourtered a Green Slime" << endl;
				cout << endl << endl;

				Mname = "Green Slime";
				Mlvl = 5;
				MHp = 10;
				MHpMax = 10;
				MMp = 5;
				MMpMax = 5;
				MAtk = 2;
				MDef = 1;
				expDrop = 10;

				do {
					
					cout << "Lvl " << Lvl << " " << name << setw(22) << "Lvl " << Mlvl << " " << Mname << endl;
					cout << "HP = ( " << Hp << "/" << HpMax << " )" << setw(22) << "HP = ( " << MHp << "/" << MHpMax << " )" << endl;
					cout << "MP = ( " << Mp << "/" << MpMax << " )" << setw(24) << "MP = ( " << MMp << "/" << MMpMax << " )" << endl;
					cout << endl << endl << endl;
					cout << "===============================================" << endl;

					cout << endl;
					cout << "Attack" << endl;
					cin >> action;

					if (action == "Attack" || action == "attack") {

						int dmg = (Atk - MDef) * 1.5;
						int Mdmg = (MAtk - Def);

								if (Mdmg < 0) {
									Mdmg = 0;
									}

								if (dmg < 0) {
									dmg = 0;
								}

						MHp = MHp - dmg;
						Hp = Hp - Mdmg;
						cout << "===============================================" << endl;
						cout << endl;
						cout << "You attacked " << Mname << "!" << endl;
						cout << Mname << " took " << dmg << " damage!" << endl;
						cout << endl;
						cout << Mname << " counter attacked!" << endl;
						cout << "You took " << Mdmg << " damage!" << endl;
						cout << endl;
						cout << "===============================================";
						cin >> cont;
						cout << endl << endl << endl;
					}

				} while ((Hp > 0) && (MHp > 0));

				exp = exp + expDrop;
				expDif = expCap - exp;

				cout << "You have defeated the " << Mname << endl;
				cout << "You gained " << expDrop << " exp" << endl;
				cout << endl;
					
				if (exp >= expCap) {
					cout << "Congratulations! You gained a level!" << endl;
					cout << endl;
						expCap = expCap + 10;
						exp = 0;
						Hp = Hp + 2;
						Mp = Mp + 2;
						HpMax = HpMax + 2;
						MpMax = MpMax + 2;
						Lvl = Lvl + 1;
						Atk = Atk + 2;
						Def = Def + 2;
						Luck = 10;
						cout << "Max HP + 2" << endl;
						cout << "Max MP + 2" << endl;
						cout << "Atk + 2" << endl;
						cout << "Def + 2" << endl;
						cout << endl;
						cout << "===============================================" << endl;
						cin >> cont;
						cout << endl;
					}

				else {
					cout << "Exp until Next level " << expDif << endl;
					cout << endl;
					cout << "===============================================";
					cin >> cont;
					cout << endl;
				}




			}

			else if (MenuSelect == "Rest" || MenuSelect == "rest") {
				Hp = HpMax;
				Mp = MpMax;
				cout << "===============================================";
				cout << endl;
				cout << "You turned in for the day." << endl;
				cout << "Hp restored" << endl;
				cout << "Mp restored" << endl;
				cout << endl;
				cout << "===============================================";
				cin >> cont;
			}

			else {
				cout << "===============================================";
				cout << endl;
				cout << "Invalid Action" << endl;
				cout << endl << endl;
				cout << "===============================================";
				cin >> cont;
			}



		}



	}




	else {
		cout << endl;
		cout << "See you next time!" << endl;
	}



}
