// TextandMonstersBranch.cpp : Defines the entry point for the console application.
// Nichol He

#include "stdafx.h"
#include <iostream>
#include <string>
#include <time.h>
#include <iomanip>

using namespace std;

int main() {

	string gameStart, name, MenuSelect, action, cont, Pclass, Skill;
	string BladeMaster, Paladin, ArchMage, SpiritMage;
	int Hp, Mp, HpMax, MpMax, Lvl;
	int Atk, Def, Luck;
	int dmg, Mdmg;

	string Mname;
	int Mlvl, MHp, MHpMax, MMp, MMpMax;
	int MAtk, MDef;

	int exp, expDrop, expCap, expDif;

	Lvl = 1;
	expCap = 10;
	exp = 0;

	int rng, loop;

	cout << "Welcome to Text and Monsters! Would you like to play?" << endl;
	cout << "\t Yes or No" << endl;
	cin >> gameStart;
	cout << endl;

	if (gameStart == "yes" || gameStart == "Yes") {
		cout << "Please enter your name" << endl;
		cout << endl;
		cin >> name;
		cin.ignore();
		cout << endl << endl;
		cout << "Please Select a class" << endl;
		cout << "\t Blade Master || Paladin || Arch Mage || Spirit Mage" << endl;
		getline(cin, Pclass);
		cout << endl << endl;
		cout << "Welcome, " << name << endl;
		cout << endl << endl;

		if (Pclass == "Blade Master" || Pclass == "Blade master" || Pclass == "blade master") {
			Pclass = BladeMaster;
			Hp = 10;
			Mp = 5;
			HpMax = 10;
			MpMax = 5;
			Atk = 5;
			Def = 3;
			Luck = 10;
		}

		else if (Pclass == "Paladin" || Pclass == "paladin") {
			Pclass = Paladin;
			Hp = 12;
			Mp = 8;
			HpMax = 12;
			MpMax = 8;
			Atk = 3;
			Def = 5;
			Luck = 10;
		}

		else if (Pclass == "Arch Mage" || Pclass == "Arch mage" || Pclass == "arch mage") {
			Pclass = ArchMage;
			Hp = 8;
			Mp = 8;
			HpMax = 8;
			MpMax = 8;
			Atk = 5;
			Def = 3;
			Luck = 10;
		}

		else if (Pclass == "Spirit Mage" || Pclass == "Spirit mage" || Pclass == "spirit mage") {
			Pclass = SpiritMage;
			Hp = 10;
			Mp = 10;
			HpMax = 10;
			MpMax = 10;
			Atk = 4;
			Def = 4;
			Luck = 10;
		}

		else {
			cout << "Invalid Entry" << endl;
			return 0;
		}

		while (Lvl < 20) {

			loop = 1;

			if (Hp > HpMax) {
				Hp = HpMax;
			}

			if (Mp > MpMax) {
				Mp = MpMax;
			}

			cout << "===============================================" << endl;
			cout << "  " << name << endl;
			cout << "  Lvl " << Lvl << " (" << exp << "/" << expCap << ")" << endl;
			cout << "  HP = (" << Hp << "/" << HpMax << ")" << endl;
			cout << "  MP = (" << Mp << "/" << MpMax << ")" << endl;
			cout << endl << endl << endl << endl;
			cout << "===============================================" << endl;
			cout << endl << endl;

			cout << "Battle" << endl;
			cout << "Rest" << endl;
			cout << endl;
			cin >> MenuSelect;
			cout << endl << endl << endl;

			if (MenuSelect == "Battle" || MenuSelect == "battle") {

				srand(time(NULL));
				rng = rand() % 100; 
				
				if (rng < 100 && rng > 0) {

					cout << "===============================================" << endl;
					cout << endl;
					cout << "You have encourtered a Green Slime" << endl;
					cout << endl << endl;
					cout << "===============================================" << endl;

					Mname = "Green Slime";
					Mlvl = 4;
					MHp = 9;
					MHpMax = 9;
					MMp = 4;
					MMpMax = 4;
					MAtk = 2;
					MDef = 2;
					expDrop = 10;

				}

				Mlvl = (Mlvl + Lvl);
				MHpMax = (MHpMax + Lvl);
				MMpMax = (MMpMax + Lvl);
				MHp = MHpMax;
				MMp = MMpMax;
				MAtk = (MAtk + Lvl ^ (1/5)) * 1.5;
				MDef = (MDef + Lvl ^ (1/5)) * 1.5;

				do {

					srand(time(NULL));
					rng = rand() % 100;

					Mp = Mp + 1;

					if (Hp > HpMax) {
						Hp = HpMax;
					}
					
					if (Mp > MpMax) {
						Mp = MpMax;
					}

					if (MHp > MHpMax) {
						MHp = MHpMax;
					}

					if (MMp > MMpMax) {
						MMp = MMpMax;
					}

					cout << "===============================================" << endl;
					cout << "Lvl " << Lvl << " " << name << setw(22) << "Lvl " << Mlvl << " " << Mname << endl;
					cout << "HP = ( " << Hp << "/" << HpMax << " )" << setw(22) << "HP = ( " << MHp << "/" << MHpMax << " )" << endl;
					cout << "MP = ( " << Mp << "/" << MpMax << " )" << setw(24) << "MP = ( " << MMp << "/" << MMpMax << " )" << endl;
					cout << endl << endl << endl << endl;
					cout << "===============================================" << endl;

					cout << endl;
					cout << "Attack" << endl;
					cout << "Skill" << endl;
					cout << "Run" << endl;
					cout << endl;
					cin >> action;
					cin.ignore();

					if (action == "Attack" || action == "attack") {

						dmg = (Atk - MDef);
						Mdmg = (MAtk - Def);

						if (Mdmg < 0) {
							Mdmg = 0;
						}

						if (dmg < 0) {
							dmg = 0;
						}

						MHp = MHp - dmg;
						Hp = Hp - Mdmg;
						cout << "===============================================" << endl;
						cout << endl;
						cout << "You attacked " << Mname << "!" << endl;
						cout << Mname << " took " << dmg << " damage!" << endl;
						cout << endl;
						cout << Mname << " counter attacked!" << endl;
						cout << "You took " << Mdmg << " damage!" << endl;
						cout << endl;
						cout << "===============================================";
						cin >> cont;
						cout << endl;
					}

					else if (action == "Skill" || action == "skill") {

						if (Pclass == BladeMaster) {
							cout << "===============================================" << endl;
							if (Lvl > 0) {
								cout << "Flying Sparrow" << endl;
								if (Lvl >= 5) {
									cout << "Horizontal Square" << endl;
									if (Lvl >= 10) {
										cout << "Parry Counter" << endl;
										if (Lvl >= 15) {
											cout << "Vorpal Strike" << endl;
											if (Lvl >= 20) {
												cout << "Blood Thirst" << endl;
											}
										}
									}
								}
							}
						}
						cout << endl;
						getline(cin, Skill);

						cout << "===============================================";
						cout << endl;

						if (Skill == "Flying Sparrow" || Skill == "Flying sparrow" || Skill == "flying sparrow") {
							dmg = (Atk - MDef) * 2;
							Mdmg = (MAtk - Def);
							Mp = Mp - 3;
						}

						else if (Skill == "Horizontal Square" || Skill == "Horizontal square" || Skill == "horizontal square") {
							dmg = (Atk - MDef) * 2;
								if (rng > 25 && rng < 50) {
									dmg = (Atk - Def) * 4;
								}
							Mdmg = (MAtk - Def);
							Mp = Mp - 4;
						}

						else if (Skill == "Parry Counter" || Skill == "Parry counter" || Skill == "parry counter") {

							if (rng > 33 && rng < 66) {
								dmg = (Atk - MDef) * Mdmg;
								Mdmg = 0;
							}
							else {
								dmg = Atk * (3 / 4) - MDef;
								Mdmg = MAtk;
							}
							Mp = Mp - 4;
						}

						else {
							Skill = "Flinch";
							Mdmg = MAtk - Def;
							dmg = 0;
						}

							if (Mdmg < 0) {
								Mdmg = 0;
							}

							if (dmg < 0) {
								dmg = 0;
							}

						if (Mp < 0) {

							cout << "You don't have enough MP!" << endl;
							cin >> cont; 
							Skill = "Attack";
							dmg = (Atk - MDef);
							Mdmg = (MAtk - Def);

							Mp = 0;
						}

						MHp = MHp - dmg;
						Hp = Hp - Mdmg;

						cout << "===============================================" << endl;
						cout << endl;
						cout << "You activated " << Skill << endl;
						cout << endl;
						cout << "You attacked " << Mname << "!" << endl;
						cout << Mname << " took " << dmg << " damage!" << endl;
						cout << endl;
						cout << Mname << " counter attacked!" << endl;
						cout << "You took " << Mdmg << " damage!" << endl;
						cout << endl;
						cout << "===============================================";
						cin >> cont;
					}
				
					else if ( action == "run" || action == "Run" ) {
						if ( rng >= 0 && rng <= 50 ) {

							cout << "===============================================" << endl;
							cout << endl;
							cout << "You successfully escaped from battle!" << endl;
							cout << endl;
							cout << "===============================================";
							cin >> cont;
							loop = 0;
						}
						else {

							cout << "You couldn't get away!" << endl;
							cout << endl;
							cin >> cont;

							Mdmg = MAtk - Def;

							cout << "===============================================" << endl;
							cout << Mname << " attacked!" << endl;
							cout << "You took " << Mdmg << " damage!" << endl;
							cout << endl;
							cout << "===============================================";
							cin >> cont;
						}
					}

				} while ((Hp > 0) && (MHp > 0) && (loop != 0));


				if (Hp <= 0) {
					cout << "GAME OVER" << endl;
					cout << "===============================================";
					cin >> cont;
					
					return 0;
				}

				if (MHp <= 0) {

					exp = exp + expDrop;
					expDif = expCap - exp;

					cout << "You have defeated the " << Mname << endl;
					cout << "You gained " << expDrop << " exp" << endl;
					cout << endl;

					if (exp >= expCap) {
						cout << "Congratulations! You gained a level!" << endl;
						cout << endl;
						expCap = expCap + 10;
						exp = 0;
						Hp = Hp + 2;
						Mp = Mp + 2;
						HpMax = HpMax + 2;
						MpMax = MpMax + 2;
						Lvl = Lvl + 1;
						Atk = Atk + 2;
						Def = Def + 2;
						Luck = 10;
						cout << "Max HP + 2" << endl;
						cout << "Max MP + 2" << endl;
						cout << "Atk + 2" << endl;
						cout << "Def + 2" << endl;
						cout << endl;
						cout << "===============================================" << endl;
						cin >> cont;
						cout << endl;
					}

					else {
						cout << "Exp until Next level " << expDif << endl;
						cout << endl;
						cout << "===============================================";
						cin >> cont;
						cout << endl;
					}

				}
			}

			else if (MenuSelect == "Rest" || MenuSelect == "rest") {
				Hp = HpMax;
				Mp = MpMax;
				cout << "===============================================" << endl;
				cout << endl;
				cout << "You turned in for the day." << endl;
				cout << endl;
				cout << "Hp restored" << endl;
				cout << "Mp restored" << endl;
				cout << endl;
				cout << "===============================================";
				cin >> cont;
			}

			else {
				cout << "===============================================";
				cout << endl;
				cout << "Invalid Action" << endl;
				cout << endl << endl;
				cout << "===============================================";
				cin >> cont;
			}



		}

	}

	else {
		cout << endl;
		cout << "See you next time!" << endl;
	}



}
